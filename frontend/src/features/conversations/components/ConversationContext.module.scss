@use '../../../styles/variables' as *;
@use '../../../styles/mixins' as *;

.contextContainer {
  height: 100%;
  display: flex;
  flex-direction: column;
  background: rgb(var(--background));
  overflow: hidden;
  
  // Modal variant styling
  &[data-variant="modal"] {
    background: rgb(var(--background));
    border: none;
    border-radius: 0;
    
    @include mobile {
      background: rgb(var(--background));
    }
  }
  
  // Sidebar variant styling (if needed in future)
  &[data-variant="sidebar"] {
    @include card-base;
    background: rgb(var(--surface));
    border: 1px solid rgb(var(--border));
    border-radius: $border-radius-lg;
  }
}

.loadingContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-xl;
  flex: 1;
}

.errorContainer {
  padding: $spacing-md;
}

.errorContent {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
  color: rgb(var(--error));
  font-size: $font-size-sm;
}

.errorIcon {
  width: 1.25rem;
  height: 1.25rem;
  flex-shrink: 0;
}

.errorText {
  flex: 1;
}

.retryButton {
  margin-left: auto;
}

.header {
  padding: $spacing-lg;
  border-bottom: 1px solid rgb(var(--border));
  background: rgb(var(--background));
  flex-shrink: 0;
  
  &[data-variant="modal"] {
    background: rgb(var(--background));
  }
}

.headerContent {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: $spacing-sm;
}

.titleSection {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
}

.titleIcon {
  width: 1.25rem;
  height: 1.25rem;
  color: rgb(var(--primary));
}

.title {
  font-size: $font-size-xl;
  font-weight: 700;
  color: rgb(var(--foreground));
  margin: 0;
  line-height: $line-height-tight;
}

.headerActions {
  display: flex;
  align-items: center;
  gap: $spacing-xs;
  flex-shrink: 0;
}

.messageCount {
  font-size: $font-size-xs;
  padding: 0.25rem 0.5rem;
  border-radius: $border-radius-full;
  background: rgb(var(--muted));
  color: rgb(var(--muted-foreground));
  border: 1px solid rgb(var(--border));
}

.expandButton {
  font-size: $font-size-xs;
  padding: 0.25rem 0.5rem;
  height: auto;
  min-height: 1.75rem;
}

.clearButton {
  font-size: $font-size-xs;
  padding: 0.25rem;
  height: auto;
  min-height: 1.75rem;
  min-width: 1.75rem;
  color: rgb(var(--error));
  
  &:hover {
    background: rgb(var(--error) / 0.1);
    color: rgb(var(--error));
  }
  
  &:disabled {
    opacity: 0.5;
  }
}

.clearIcon {
  width: 1rem;
  height: 1rem;
}

.content {
  flex: 1;
  padding: $spacing-lg;
  overflow-y: auto;
  @include custom-scrollbar;
  display: flex;
  flex-direction: column;
  gap: $spacing-lg;
}

.section {
  display: flex;
  flex-direction: column;
  gap: $spacing-sm;
}

.sectionHeader {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
  font-size: $font-size-sm;
  font-weight: 500;
  color: rgb(var(--foreground));
}

.sectionIcon {
  width: 1rem;
  height: 1rem;
  color: rgb(var(--muted-foreground));
}

.sectionTitle {
  font-size: $font-size-sm;
  font-weight: 500;
  color: rgb(var(--foreground));
}

.summaryContent {
  font-size: $font-size-base;
  color: rgb(var(--foreground));
  background: rgb(var(--muted));
  padding: $spacing-md;
  border-radius: $border-radius-lg;
  line-height: $line-height-relaxed;
  word-wrap: break-word;
  border: 1px solid rgb(var(--border));
}

.lastActivity {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
  font-size: $font-size-sm;
  color: rgb(var(--muted-foreground));
  padding: $spacing-sm 0;
}

.activityIcon {
  width: 1rem;
  height: 1rem;
  color: rgb(var(--muted-foreground));
}

.activityText {
  font-size: $font-size-sm;
  color: rgb(var(--muted-foreground));
}

.sessionData {
  display: flex;
  flex-direction: column;
  gap: $spacing-xs;
  font-size: $font-size-xs;
}

.sessionItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.25rem 0;
}

.sessionKey {
  color: rgb(var(--muted-foreground));
  font-weight: 500;
}

.sessionValue {
  color: rgb(var(--foreground));
  text-align: right;
  word-break: break-word;
  max-width: 60%;
}

.historyContainer {
  display: flex;
  flex-direction: column;
  gap: $spacing-sm;
  max-height: 15rem;
  overflow-y: auto;
  @include custom-scrollbar(6px);
}

.historyItem {
  padding: $spacing-sm;
  border-radius: $border-radius-md;
  font-size: $font-size-xs;
  border-left: 2px solid;
  animation: messageSlideIn 0.2s ease-out;
}

.userMessage {
  background: rgb(var(--primary) / 0.1);
  border-left-color: rgb(var(--primary));
}

.aiMessage {
  background: rgb(var(--muted));
  border-left-color: rgb(var(--muted-foreground));
}

.messageHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 0.25rem;
}

.roleBadge {
  font-size: $font-size-xs;
  padding: 0.125rem 0.375rem;
  height: auto;
  min-height: 1.25rem;
}

.messageTime {
  font-size: $font-size-xs;
  color: rgb(var(--muted-foreground));
}

.messageContent {
  font-size: $font-size-xs;
  line-height: $line-height-normal;
  @include text-truncate-multiline(2);
  margin-bottom: 0.25rem;
}

.intentBadge {
  margin-top: 0.25rem;
}

.intentBadgeContent {
  font-size: $font-size-xs;
  padding: 0.125rem 0.375rem;
  height: auto;
  min-height: 1.25rem;
}

.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: $spacing-xl;
  text-align: center;
  color: rgb(var(--muted-foreground));
  flex: 1;
}

.emptyIcon {
  width: 2rem;
  height: 2rem;
  margin-bottom: $spacing-sm;
  opacity: 0.5;
}

.emptyText {
  font-size: $font-size-sm;
  color: rgb(var(--muted-foreground));
}

// Responsive adjustments
@include mobile {
  .headerContent {
    flex-direction: column;
    align-items: flex-start;
    gap: $spacing-sm;
  }
  
  .headerActions {
    width: 100%;
    justify-content: space-between;
  }
  
  .content {
    padding: $spacing-md;
  }
  
  .historyContainer {
    max-height: 12rem;
  }
  
  .header {
    padding: $spacing-md;
  }
}

// Animation for message slide in
@keyframes messageSlideIn {
  from {
    opacity: 0;
    transform: translateY(0.5rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
