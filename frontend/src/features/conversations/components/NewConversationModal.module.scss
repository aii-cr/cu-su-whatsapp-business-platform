@use '../../../styles/variables' as *;
@use '../../../styles/mixins' as *;

.modalContent {
  @include glass-effect;
  max-width: 800px;
  width: 90vw;
  max-height: 90vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  backdrop-filter: blur(20px);
  border: 1px solid rgb(var(--border) / 0.2);
}

.modalHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem 1.5rem 1rem;
  border-bottom: 1px solid rgb(var(--border) / 0.3);
  background: transparent;
  position: relative;
}

.modalTitle {
  font-size: 1.25rem;
  font-weight: 600;
  color: rgb(var(--foreground));
  margin: 0;
  flex: 1;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  
  svg {
    color: rgb(var(--primary));
  }
}

.modalDescription {
  color: rgb(var(--muted-foreground));
  font-size: 0.875rem;
  margin-top: 0.5rem;
  line-height: 1.5;
}

.closeButton {
  position: absolute;
  right: 0.5rem;
  top: 0.5rem;
  color: white;
  background: transparent;
  border: none;
  padding: 0.5rem;
  border-radius: 0.375rem;
  transition: all 0.2s ease;
  z-index: 10;
  
  svg {
    width: 1.5rem;
    height: 1.5rem;
  }
  
  &:hover {
    color: white;
    background: rgba(255, 255, 255, 0.1);
    transform: scale(1.1);
  }
  
  &:active {
    transform: scale(0.95);
  }
}

.modalBody {
  flex: 1;
  overflow-y: auto;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  min-height: 0;
}

.section {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.sectionTitle {
  font-size: 1rem;
  font-weight: 600;
  color: rgb(var(--foreground));
  margin: 0;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.phoneNumberGrid {
  display: grid;
  grid-template-columns: 1fr 2fr;
  gap: 1rem;
  
  @media (max-width: 768px) {
    grid-template-columns: 1fr;
  }
}

.phonePreview {
  font-size: 0.75rem;
  color: rgb(var(--muted-foreground));
  margin-top: 0.25rem;
  font-family: monospace;
  background: rgb(var(--primary) / 0.05);
  padding: 0.5rem;
  border-radius: 0.375rem;
  border: 1px solid rgb(var(--primary) / 0.1);
  backdrop-filter: blur(5px);
}

.templateSection {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.templateFilters {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  
  @media (max-width: 768px) {
    flex-direction: column;
    gap: 0.75rem;
  }
}

.searchInput {
  flex: 1;
  min-width: 250px;
}

.categorySelect {
  min-width: 200px;
}

.templatesGrid {
  max-height: 300px;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  border: 1px solid rgb(var(--border) / 0.5);
  border-radius: 0.5rem;
  padding: 1rem;
  background: rgb(var(--background) / 0.8);
  border: 1px solid rgb(var(--border) / 0.3);
  backdrop-filter: blur(10px);
  
  @include custom-scrollbar;
}

.templateCard {
  cursor: pointer;
  transition: all 0.2s ease;
  padding: 1rem;
  border-radius: 0.5rem;
  border: 1px solid rgb(var(--border) / 0.3);
  background: rgb(var(--background) / 0.8);
  backdrop-filter: blur(10px);
  
  &:hover {
    border-color: rgb(var(--primary) / 0.5);
    background: rgb(var(--background) / 0.9);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgb(var(--shadow) / 0.1);
  }
  
  &.selected {
    border-color: rgb(var(--primary));
    background: rgb(var(--primary) / 0.05);
    box-shadow: 0 0 0 1px rgb(var(--primary) / 0.3);
  }
}

.templateHeader {
  display: flex;
  align-items: start;
  justify-content: space-between;
  margin-bottom: 0.75rem;
}

.templateName {
  font-weight: 600;
  color: rgb(var(--foreground));
  font-size: 0.875rem;
  margin: 0;
}

.templateBadges {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  flex-wrap: wrap;
}

.templateBadge {
  font-size: 0.75rem;
  padding: 0.125rem 0.375rem;
  border-radius: 0.25rem;
  font-weight: 500;
  
  &.category {
    background: rgb(var(--primary) / 0.1);
    color: rgb(var(--primary));
    border: 1px solid rgb(var(--primary) / 0.2);
  }
  
  &.language {
    background: rgb(var(--muted));
    color: rgb(var(--foreground));
  }
  
  &.status {
    &.approved {
      background: rgb(var(--success) / 0.1);
      color: rgb(var(--success));
      border: 1px solid rgb(var(--success) / 0.2);
    }
    
    &.pending {
      background: rgb(var(--warning) / 0.1);
      color: rgb(var(--warning));
      border: 1px solid rgb(var(--warning) / 0.2);
    }
    
    &.rejected {
      background: rgb(var(--error) / 0.1);
      color: rgb(var(--error));
      border: 1px solid rgb(var(--error) / 0.2);
    }
  }
}

.templatePreview {
  font-size: 0.8rem;
  color: rgb(var(--muted-foreground));
  line-height: 1.4;
  margin-bottom: 0.75rem;
  max-height: 3rem;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -webkit-box-orient: vertical;
}

.templateParameters {
  display: flex;
  flex-wrap: wrap;
  gap: 0.375rem;
  
  .parameterChip {
    font-size: 0.7rem;
    padding: 0.25rem 0.5rem;
    background: rgb(var(--accent) / 0.5);
    color: rgb(var(--foreground));
    border-radius: 0.25rem;
    border: 1px solid rgb(var(--border) / 0.3);
  }
}

.selectionIndicator {
  width: 1.25rem;
  height: 1.25rem;
  background: rgb(var(--primary));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 0.5rem;
  flex-shrink: 0;
  
  .checkIcon {
    width: 0.75rem;
    height: 0.75rem;
    color: white;
  }
}

.parametersSection {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  background: rgb(var(--primary) / 0.05);
  border-radius: 0.5rem;
  border: 1px solid rgb(var(--primary) / 0.1);
  backdrop-filter: blur(5px);
  animation: slideInUp 0.3s ease-out;
}

.parameterGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.parameterLabel {
  font-size: 0.875rem;
  font-weight: 500;
  color: rgb(var(--foreground));
  display: flex;
  align-items: center;
  gap: 0.5rem;
  
  .exampleText {
    font-size: 0.75rem;
    color: rgb(var(--muted-foreground));
    font-weight: 400;
    font-style: italic;
  }
}

.loadingState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem 1rem;
  color: rgb(var(--foreground));
  gap: 1rem;
  
  .spinner {
    width: 2rem;
    height: 2rem;
    border: 2px solid rgb(var(--border));
    border-top: 2px solid rgb(var(--primary));
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  p {
    font-size: 0.875rem;
    margin: 0;
    color: rgb(var(--muted-foreground));
  }
}

.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem 1rem;
  text-align: center;
  color: rgb(var(--muted-foreground));
  gap: 1rem;
  
  .emptyIcon {
    width: 3rem;
    height: 3rem;
    opacity: 0.5;
  }
  
  h3 {
    font-size: 1.125rem;
    font-weight: 600;
    margin: 0;
    color: rgb(var(--foreground));
  }
  
  p {
    font-size: 0.875rem;
    margin: 0;
    max-width: 400px;
    line-height: 1.5;
  }
}

.errorState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem 1rem;
  gap: 1rem;
  text-align: center;
  
  .errorIcon {
    width: 2.5rem;
    height: 2.5rem;
    color: rgb(var(--error));
  }
  
  p {
    margin: 0;
    font-size: 0.875rem;
    color: rgb(var(--error));
  }
}

.actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
  padding: 1.5rem;
  border-top: 1px solid rgb(var(--border) / 0.3);
  background: transparent;
  flex-shrink: 0;
  
  @media (max-width: 768px) {
    flex-direction: column;
    
    button {
      width: 100%;
    }
  }
}

.startButton {
  @include button-base;
  background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--primary) / 0.8));
  color: white;
  font-weight: 500;
  border: none;
  padding: 0.75rem 2rem;
  position: relative;
  overflow: hidden;
  min-width: 140px;
  border-radius: 0.5rem;
  
  // Shimmer effect
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
  }
  
  &:hover {
    background: linear-gradient(135deg, rgb(var(--primary) / 0.9), rgb(var(--primary) / 0.7));
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(var(--primary), 0.3);
    color: white;
    
    &::before {
      left: 100%;
    }
  }
  
  &:active {
    transform: translateY(0);
    box-shadow: 0 2px 8px rgba(var(--primary), 0.2);
    color: white;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
    
    &::before {
      display: none;
    }
  }
  
  .loadingSpinner {
    width: 1rem;
    height: 1rem;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-top: 2px solid white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-right: 0.5rem;
  }
}

.startButton.success {
  background: linear-gradient(135deg, rgb(var(--success)), rgb(var(--success) / 0.8)) !important;
  animation: pulse 0.6s ease-in-out;
  
  &:hover {
    background: linear-gradient(135deg, rgb(var(--success)), rgb(var(--success) / 0.8)) !important;
  }
}

.cancelButton {
  @include button-base;
  border: 1px solid rgb(var(--border));
  color: rgb(var(--foreground));
  background: transparent;
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  
  &:hover {
    background: rgb(var(--accent));
    border-color: rgb(var(--border));
  }
}

// Animations
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(0.5rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.templateCard {
  animation: fadeIn 0.2s ease-out;
}

// Responsive design
@media (max-width: 768px) {
  .modalContent {
    width: 95vw;
    max-height: 95vh;
  }
  
  .modalHeader {
    padding: 1rem;
  }
  
  .modalBody {
    padding: 1rem;
    gap: 1rem;
  }
  
  .templateFilters {
    gap: 0.5rem;
  }
  
  .templatesGrid {
    max-height: 250px;
    padding: 0.75rem;
  }
  
  .templateCard {
    padding: 0.75rem;
  }
  
  .templateBadges {
    gap: 0.25rem;
  }
  
  .actions {
    padding: 1rem;
    gap: 0.5rem;
  }
}

@media (max-width: 480px) {
  .modalContent {
    width: 98vw;
    max-height: 95vh;
  }
  
  .modalHeader {
    padding: 0.875rem;
  }
  
  .modalBody {
    padding: 0.875rem;
  }
  
  .actions {
    padding: 0.875rem;
  }
}
